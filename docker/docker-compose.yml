version: '3'

services:

### Reverse Proxy  ##########################################
  proxy:
    build:
      context: ${DOCKER_PATH}/proxy
      args:
        - NGINX_DOCKERFILE_SOURCE=${NGINX_DOCKERFILE_SOURCE}
    volumes:
      - ${DATA_PATH_HOST}/logs/proxy:/var/log/nginx
      - ${DOCKER_PATH}/_devops/ssl:/etc/nginx/ssl
      - ${DOCKER_PATH}/_devops/nginx/proxy:/etc/nginx/sites-available
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - 'adminer'
    networks:
      network:
        aliases:
          - covidtrack.lan

### adminer develpment tools  ##########################################
  adminer:
    image: adminer
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
    restart: always
    ports:
      - 8091:8080
    networks:
      - network

  # beanstalkd:
  #   build: ./beanstalkd
  #   ports:
  #     - "11300:11300"
  #   privileged: true
  #   networks:
  #     - network


  php-fpm:
    build:
      context: ${DOCKER_PATH}/php-fpm
      args:
        - PHP_FPM_DOCKERFILE_SOURCE=${PHP_FPM_DOCKERFILE_SOURCE}
        - PHP_UPSTREAM_PORT=${PHP_UPSTREAM_PORT}
    volumes:
      - ${APP_PATH}:/var/www
    expose:
      - "9000"
    networks:
      - network


  workspace:
    build:
      context: ${DOCKER_PATH}/workspace
      args:
        - PHP_DOCKERFILE_SOURCE=${PHP_DOCKERFILE_SOURCE}
    volumes:
      - ${APP_PATH}:/var/www
    tty: true
    networks:
      - network

  covidtrack:
    build:
      context: ${DOCKER_PATH}/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${PHP_UPSTREAM_PORT}
    volumes:
      - ${APP_PATH}/docker/_devops/nginx/covidtrack.conf:/etc/nginx/sites-available/default.conf
      - ${APP_PATH}:/var/www
    ports:
      - "8101:8101"
    depends_on:
      - php-fpm
    networks:
      - network

  cron:
   build:
     context: ${DOCKER_PATH}/cron
     args:
       - PHP_DOCKERFILE_SOURCE=${PHP_DOCKERFILE_SOURCE}
   volumes:
     - ${APP_PATH}:/var/www
     - ./cron/crontab:/etc/cron.d
   tty: true
   networks:
     - network


  # minio:
  #   build:
  #     context: ${DOCKER_PATH}/minio
  #     args:
  #       - MINIO_DOCKERFILE_SOURCE=${MINIO_DOCKERFILE_SOURCE}
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - ${DATA_PATH_HOST}/mino/data:/export
  #     - ${DATA_PATH_HOST}/minio/config:/root/.minio
  #   environment:
  #     MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
  #     MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  #   networks:
  #     - network

### MySQL ################################################
  mysql:
    build:
      context: ${DOCKER_PATH}/mysql
      args:
        - MYSQL_DOCKERFILE_SOURCE=${MYSQL_DOCKERFILE_SOURCE}
        - TZ=${TIMEZONE}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - network

### Redis ################################################
#  redis:
#    build:
#      context: ${DOCKER_PATH}/redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - '${DATA_PATH_HOST}/redis:/data'
#      - ${DATA_PATH_HOST}/logs/redis:/var/log/redis/
#    networks:
#      - network

networks:
  network:
    driver: ${NETWORKS_DRIVER}
